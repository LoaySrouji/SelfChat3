package com.example.selfchat3_1;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.SharedPreferences;
import android.preference.PreferenceManager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity implements MyAdapter.MessageOnClickListener {
    public static final String SP_KEY_FOR_DATA_COUNTER = "counter_key";

    RecyclerView messageViews;
    Button sendMessage;
    EditText writeMessage;

    MyAdapter myAdapter;

    SharedPreferences sp;
    SharedPreferences.Editor sp_editor;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        writeMessage = (EditText) findViewById(R.id.editText2);
        sendMessage = (Button) findViewById(R.id.button3);
        messageViews = (RecyclerView) findViewById(R.id.rec1);
        messageViews.setLayoutManager(new LinearLayoutManager(getApplicationContext()));

        sp = PreferenceManager.getDefaultSharedPreferences(this);
        sp_editor = sp.edit();

        myAdapter = new MyAdapter(this, sp, sp_editor);
        int current_size = myAdapter.dataManager.getDataSize();



        messageViews.setAdapter(myAdapter);

        if(current_size != 0)
        {
            myAdapter.getStoredMessages(current_size);
        }

        sendMessage.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String messageToSend = writeMessage.getText().toString();
                writeMessage.setText("");
                if (messageToSend.length() == 0) {
                    Toast.makeText(getApplicationContext(), "You can't send an empty message, " +
                            "Oh silly!", Toast.LENGTH_LONG).show();
                    return;
                }
                myAdapter.addItem(messageToSend, false);
            }
        });
    }

    public void recItemOnClickListener(View view, final int messageID)
    {
        new AlertDialog.Builder(this)
                .setTitle("Delete the selected message?")

                .setMessage("Note that you can't restore deleted messages")
                .setPositiveButton("yes", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        myAdapter.deleteMessageById(messageID);

                        Toast.makeText(getApplicationContext(),
                                "message was deleted successfully", Toast.LENGTH_LONG).show();

                    }
                })
                .setNegativeButton("no", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialogInterface, int i) {
                        Toast.makeText(getApplicationContext(),
                                "deleting process was aborted", Toast.LENGTH_LONG).show();
                    }
                })
                .show();
    }

    @Override
    public void onSaveInstanceState(Bundle savedInstanceState) {
        super.onSaveInstanceState(savedInstanceState);
        savedInstanceState.putString("wrote_message", writeMessage.getText().toString());
        savedInstanceState.putStringArrayList("messages", myAdapter.data);

    }

    @Override
    public void onRestoreInstanceState(Bundle savedInstanceState) {
        super.onRestoreInstanceState(savedInstanceState);
        String wrote_message = savedInstanceState.getString("wrote_message");
        myAdapter.data = savedInstanceState.getStringArrayList("messages");
        writeMessage.setText(wrote_message);
        myAdapter.supportConfigurationChange();
    }
}
